// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App should render App 1`] = `
<Fragment>
  <main>
    <WithStyles(ForwardRef(Paper))>
      <WithStyles(ForwardRef(Typography))
        gutterBottom={true}
        variant="h6"
      >
        Employee details
      </WithStyles(ForwardRef(Typography))>
      <WithStyles(ForwardRef(Grid))
        container={true}
        spacing={3}
      >
        <WithStyles(ForwardRef(Grid))
          item={true}
          sm={6}
          xs={12}
        >
          <WithStyles(ForwardRef(TextField))
            error={false}
            fullWidth={true}
            helperText={false}
            id="firstName"
            label="First name"
            name="firstName"
            onChange={[Function]}
            value=""
          />
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
          sm={6}
          xs={12}
        >
          <WithStyles(ForwardRef(TextField))
            error={false}
            fullWidth={true}
            helperText={false}
            id="lastName"
            label="Last name"
            name="lastName"
            onChange={[Function]}
            required={true}
            value=""
          />
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
          xs={12}
        >
          <WithStyles(ForwardRef(TextField))
            error={false}
            fullWidth={true}
            helperText={false}
            id="email"
            label="Email"
            name="email"
            onChange={[Function]}
            required={true}
            value=""
          />
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
          sm={6}
          xs={12}
        >
          <WithStyles(ForwardRef(TextField))
            error={false}
            fullWidth={true}
            helperText={false}
            id="phoneNo"
            label="Phone no"
            name="phoneNo"
            onChange={[Function]}
            required={true}
            value=""
          />
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
          sm={6}
          xs={12}
        >
          <WithStyles(ForwardRef(FormControl))
            error={false}
            fullWidth={true}
            required={true}
            variant="outlined"
          >
            <WithStyles(ForwardRef(InputLabel))
              id="demo-simple-select-outlined-label"
            >
              Department
            </WithStyles(ForwardRef(InputLabel))>
            <WithStyles(ForwardRef(Select))
              id="department"
              label="Department"
              onChange={[Function]}
              value=""
            >
              <WithStyles(ForwardRef(MenuItem))
                value="Fullstack"
              >
                Full stack
              </WithStyles(ForwardRef(MenuItem))>
              <WithStyles(ForwardRef(MenuItem))
                value="Frontend"
              >
                Frontend
              </WithStyles(ForwardRef(MenuItem))>
              <WithStyles(ForwardRef(MenuItem))
                value="Backend"
              >
                Backend
              </WithStyles(ForwardRef(MenuItem))>
            </WithStyles(ForwardRef(Select))>
          </WithStyles(ForwardRef(FormControl))>
        </WithStyles(ForwardRef(Grid))>
      </WithStyles(ForwardRef(Grid))>
      <WithStyles(ForwardRef(Button))
        color="primary"
        onClick={[Function]}
        variant="contained"
      >
        Submit
      </WithStyles(ForwardRef(Button))>
    </WithStyles(ForwardRef(Paper))>
  </main>
  <WithStyles(ForwardRef(Container))
    maxWidth="md"
  >
    <WithStyles(ForwardRef(Grid))
      container={true}
      spacing={4}
    />
  </WithStyles(ForwardRef(Container))>
  <WithStyles(ForwardRef(Container))
    maxWidth="md"
  >
    <WithStyles(ForwardRef(Grid))
      container={true}
      spacing={4}
    />
  </WithStyles(ForwardRef(Container))>
  <WithStyles(ForwardRef(Container))
    maxWidth="md"
  >
    <WithStyles(ForwardRef(Grid))
      container={true}
      spacing={4}
    />
  </WithStyles(ForwardRef(Container))>
</Fragment>
`;

exports[`App should render App with employee data 1`] = `
<Fragment>
  <main>
    <WithStyles(ForwardRef(Paper))>
      <WithStyles(ForwardRef(Typography))
        gutterBottom={true}
        variant="h6"
      >
        Employee details
      </WithStyles(ForwardRef(Typography))>
      <WithStyles(ForwardRef(Grid))
        container={true}
        spacing={3}
      >
        <WithStyles(ForwardRef(Grid))
          item={true}
          sm={6}
          xs={12}
        >
          <WithStyles(ForwardRef(TextField))
            error={false}
            fullWidth={true}
            helperText={false}
            id="firstName"
            label="First name"
            name="firstName"
            onChange={[Function]}
            value=""
          />
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
          sm={6}
          xs={12}
        >
          <WithStyles(ForwardRef(TextField))
            error={false}
            fullWidth={true}
            helperText={false}
            id="lastName"
            label="Last name"
            name="lastName"
            onChange={[Function]}
            required={true}
            value=""
          />
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
          xs={12}
        >
          <WithStyles(ForwardRef(TextField))
            error={false}
            fullWidth={true}
            helperText={false}
            id="email"
            label="Email"
            name="email"
            onChange={[Function]}
            required={true}
            value=""
          />
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
          sm={6}
          xs={12}
        >
          <WithStyles(ForwardRef(TextField))
            error={false}
            fullWidth={true}
            helperText={false}
            id="phoneNo"
            label="Phone no"
            name="phoneNo"
            onChange={[Function]}
            required={true}
            value=""
          />
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
          sm={6}
          xs={12}
        >
          <WithStyles(ForwardRef(FormControl))
            error={false}
            fullWidth={true}
            required={true}
            variant="outlined"
          >
            <WithStyles(ForwardRef(InputLabel))
              id="demo-simple-select-outlined-label"
            >
              Department
            </WithStyles(ForwardRef(InputLabel))>
            <WithStyles(ForwardRef(Select))
              id="department"
              label="Department"
              onChange={[Function]}
              value=""
            >
              <WithStyles(ForwardRef(MenuItem))
                value="Fullstack"
              >
                Full stack
              </WithStyles(ForwardRef(MenuItem))>
              <WithStyles(ForwardRef(MenuItem))
                value="Frontend"
              >
                Frontend
              </WithStyles(ForwardRef(MenuItem))>
              <WithStyles(ForwardRef(MenuItem))
                value="Backend"
              >
                Backend
              </WithStyles(ForwardRef(MenuItem))>
            </WithStyles(ForwardRef(Select))>
          </WithStyles(ForwardRef(FormControl))>
        </WithStyles(ForwardRef(Grid))>
      </WithStyles(ForwardRef(Grid))>
      <WithStyles(ForwardRef(Button))
        color="primary"
        onClick={[Function]}
        variant="contained"
      >
        Submit
      </WithStyles(ForwardRef(Button))>
    </WithStyles(ForwardRef(Paper))>
  </main>
  <WithStyles(ForwardRef(Container))
    maxWidth="md"
  >
    <WithStyles(ForwardRef(Grid))
      container={true}
      spacing={4}
    />
  </WithStyles(ForwardRef(Container))>
  <WithStyles(ForwardRef(Container))
    maxWidth="md"
  >
    <WithStyles(ForwardRef(Grid))
      container={true}
      spacing={4}
    />
  </WithStyles(ForwardRef(Container))>
  <WithStyles(ForwardRef(Container))
    maxWidth="md"
  >
    <WithStyles(ForwardRef(Grid))
      container={true}
      spacing={4}
    >
      <WithStyles(ForwardRef(Typography))
        align="center"
        gutterBottom={true}
        variant="h5"
      >
        Backend
      </WithStyles(ForwardRef(Typography))>
      <WithStyles(ForwardRef(Grid))
        item={true}
        md={4}
        sm={6}
        xs={12}
      >
        <WithStyles(ForwardRef(Card))>
          <WithStyles(ForwardRef(CardContent))>
            <WithStyles(ForwardRef(Typography))
              gutterBottom={true}
              variant="h6"
            >
              New
               
              No
            </WithStyles(ForwardRef(Typography))>
            <WithStyles(ForwardRef(Typography))
              color="textSecondary"
            >
              p@com
            </WithStyles(ForwardRef(Typography))>
            <WithStyles(ForwardRef(Typography))
              color="textSecondary"
            >
              1234567890
            </WithStyles(ForwardRef(Typography))>
            <WithStyles(ForwardRef(Typography))
              color="textSecondary"
            >
              Backend
            </WithStyles(ForwardRef(Typography))>
          </WithStyles(ForwardRef(CardContent))>
        </WithStyles(ForwardRef(Card))>
      </WithStyles(ForwardRef(Grid))>
    </WithStyles(ForwardRef(Grid))>
  </WithStyles(ForwardRef(Container))>
</Fragment>
`;
